# yaml-language-server: $schema=../../schema/local.json
config:
  tracing:
    otlpEndpoint: http://localhost:4317
    randomSampling: true
    fields:
      add:
        # Add JWT actor claim
        authenticated: 'jwt.sub != null'
        "jwt.act": 'jwt.act'
        user_id: 'jwt.name'
        token_issuer: 'jwt.iss'
        token_audience: 'jwt.aud'
        # Useful in environments where identity is included in the transport, ie SPIFFE
        # source_identity: 'source.identity.trustDomain + "/" + source.identity.namespace + "/" + source.identity.serviceAccount'
        # source_trust_domain: 'source.identity.trustDomain'
        # source_namespace: 'source.identity.namespace'
        # source_service_account: 'source.identity.serviceAccount'
  logging:
    fields:
      add:
        # Add JWT actor claim
        authenticated: 'jwt.sub != null'
        "jwt.act": "jwt.act"
        user_id: 'jwt.name'
        token_issuer: 'jwt.iss'
        token_audience: 'jwt.aud'
binds:
- port: 3000
  listeners:
  - hostname: "supply-chain-agent.localhost"
    routes:
    - policies:
        # Mark this route as a2a traffic
        a2a: {}
        jwtAuth:
          mode: strict
          issuer: agent-sts
          audiences: [supply-chain-agent]
          jwks:
            url: http://localhost:8081/.well-known/jwks.json  
        extAuthz:
          host: "localhost:9191"  # Direct host:port reference
          context:  # Custom context extensions sent to policy engine
            environment: "development"
            region: "us-west-1"
            service: "agentgateway"                       
        backendAuth:
          passthrough: {}
        authorization:
          rules:
          - 'jwt.name == "mcp-user" && jwt.act.sub == "spiffe://cluster.local/ns/default/sa/supply-chain-backend"'
        cors:
          allowOrigins:
            - "*"
          allowHeaders:
            - "*"
      backends:
      - host: localhost:9999

  - hostname: "market-analysis-agent.localhost"
    routes:
    - policies:
        # Mark this route as a2a traffic
        a2a: {}
        jwtAuth:
          mode: strict
          issuer: agent-sts
          audiences: [market-analysis-agent]
          jwks:
            url: http://localhost:8081/.well-known/jwks.json           
        backendAuth:
          passthrough: {}             
        cors:
          allowOrigins:
            - "*"
          allowHeaders:
            - "*"
      backends:
      - host: localhost:9998      

  - routes:
    - name: general-mcp
      matches:
      - path:
          pathPrefix: /general/mcp
      policies:
        cors:
          allowOrigins:
            - "*"
          allowHeaders:
            - "*"
        jwtAuth:
          mode: strict
          issuer: agent-sts
          audiences: ["company-mcp.default"]
          jwks:
            url: http://localhost:8081/.well-known/jwks.json         
      backends:
      - mcp:
          targets:
          - name: time
            stdio:
              cmd: uvx
              args: ["mcp-server-time"]
          - name: everything
            stdio:
              cmd: npx
              args: ["@modelcontextprotocol/server-everything"]
          - name: mcp-sequential-thinking
            stdio:
              cmd: npx
              args: ["@modelcontextprotocol/server-sequential-thinking"]              
    
